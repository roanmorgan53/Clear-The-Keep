Challenge05 - Ryan Grychowski 

-----Link to GitHub Repository-----

https://github.com/roanmorgan53/Clear-The-Keep

-----Project Summary-----

For our project, we plan to use the godot engine to create a 2D dungeon game where we implement 
disjoint sets to create a randomized maze filled with enemies that you can battle with the goal 
to be to reach the end of the maze successfully. 

-----Project Rubric-----

1. Project Concept and Creativity (5 points)

	5 points: Unique project idea that creatively uses data structures in a meaningful way. 
	3 points: Average level project with straightforward approach.
	1 point: Takes the easy way out.

2. Use of Data Structures (10 points)

	10 points: Uses a data structure taught in class effectively and applies it to solve a major issue
	5 points:  Application of data structure is not optimal
	3 points: Very basic use and misunderstanding of data structure

3. Team Collaboration and Contribution (5 points)
	
	5 points: All team members contributed equally and worked well together. Clear that there was a team wide effort
	3 points: Some members contributed much more than others
	1 point: Little evidence of teamwork

4. Code Quality and Documentation (10 points)

	10 points: Code is clean and well-organized. Easy to follow
	5 points: Code works but is hard to follow
	1 point: Unreadable and poorly structured code

5. Project Completeness and Functionality (10 points)
	
	10 points: Project works as intended and meets the initial goals
	5 points: Functional but lacks certain features
	1 point: Project does not work and is incomplete

-----Time Table-----

9/26 - 2 hour(s) - Spent researching disjoint set structures and how to create a random maze generator.
9/28 - 1 hour(s) - Spent studying godot.
9/29 - 2 hour(s) - Spent researching and brainstorming ways to implement disjoint set structures into godot
9/30 - 1 hour(s) - In lab starting to write bits and pieces into godot and get my feet wet.

-----Compliable Task-----

My compliable task is to find a way to use disjoint sets to randomize maze generation and create the map for 
our player to exist within. 
